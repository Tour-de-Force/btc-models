'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (schema) {

  // Instantiate a new schema compiler per mixin. It will be closed over by
  // the validate function in the mixin.
  var ajv = (0, _ajv2.default)({ allErrors: true });

  return {
    validate: function validate(attributes, options) {

      // Don't validate safeguarded keys, if any!
      var attrs = undefined;
      if (this.safeguard) {
        attrs = (0, _underscore.omit)(attributes, this.safeguard);
      } else {
        attrs = attributes;
      }

      // Investigate filtering safeguarded keys.
      var valid = ajv.validate(schema, attrs);
      if (!valid) {
        return ajv.errors;
      }
    }
  };
};

var _ajv = require('ajv');

var _ajv2 = _interopRequireDefault(_ajv);

var _underscore = require('underscore');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbC92YWxpZGF0aW9uLW1peGluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztrQkF5QmUsVUFBVSxNQUFWLEVBQW1COzs7O0FBSWhDLE1BQU0sTUFBTSxtQkFBSyxFQUFFLFdBQVcsSUFBWCxFQUFQLENBQU4sQ0FKMEI7O0FBTWhDLFNBQU87QUFDTCxjQUFVLGtCQUFVLFVBQVYsRUFBc0IsT0FBdEIsRUFBZ0M7OztBQUd4QyxVQUFJLGlCQUFKLENBSHdDO0FBSXhDLFVBQUssS0FBSyxTQUFMLEVBQWlCO0FBQ3BCLGdCQUFRLHNCQUFNLFVBQU4sRUFBa0IsS0FBSyxTQUFMLENBQTFCLENBRG9CO09BQXRCLE1BRU87QUFDTCxnQkFBUSxVQUFSLENBREs7T0FGUDs7O0FBSndDLFVBV2xDLFFBQVEsSUFBSSxRQUFKLENBQWMsTUFBZCxFQUFzQixLQUF0QixDQUFSLENBWGtDO0FBWXhDLFVBQUssQ0FBQyxLQUFELEVBQVM7QUFDWixlQUFPLElBQUksTUFBSixDQURLO09BQWQ7S0FaUTtHQURaLENBTmdDO0NBQW5CIiwiZmlsZSI6InZhbGlkYXRpb24tbWl4aW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBidGMtYXBwLXNlcnZlciAtLSBTZXJ2ZXIgZm9yIHRoZSBCaWN5Y2xlIFRvdXJpbmcgQ29tcGFuaW9uXG4gKiBDb3B5cmlnaHQgwqkgMjAxNiBBZHZlbnR1cmUgQ3ljbGluZyBBc3NvY2lhdGlvblxuICpcbiAqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIGJ0Yy1hcHAtc2VydmVyLlxuICpcbiAqIGJ0Yy1hcHAtc2VydmVyIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgQWZmZXJvIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKiBcbiAqIGJ0Yy1hcHAtc2VydmVyIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogQWZmZXJvIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKiBcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEFmZmVybyBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCBGb29iYXIuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKi9cblxuaW1wb3J0IEFqdiBmcm9tICdhanYnO1xuaW1wb3J0IHsgb21pdCB9IGZyb20gJ3VuZGVyc2NvcmUnO1xuXG4vLyAjIFZhbGlkYXRpb24gTWl4aW4gRmFjdG9yeVxuLy8gQSBmdW5jdGlvbiB0byBnZW5lcmF0ZSBhIG1peGluIHRoYXQgbWF5IGJlIGFwcGxpZWQgdG8gYSBCYWNrYm9uZSBNb2RlbC5cbi8vIFRvIGdlbmVyYXRlIHRoZSBtaXhpbiwgeW91IG11c3Qgc3VwcGx5IGEgY29uZm9ybWFudCBKU09OIHNjaGVtYSBhcyBKU09OLlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oIHNjaGVtYSApIHtcblxuICAvLyBJbnN0YW50aWF0ZSBhIG5ldyBzY2hlbWEgY29tcGlsZXIgcGVyIG1peGluLiBJdCB3aWxsIGJlIGNsb3NlZCBvdmVyIGJ5XG4gIC8vIHRoZSB2YWxpZGF0ZSBmdW5jdGlvbiBpbiB0aGUgbWl4aW4uXG4gIGNvbnN0IGFqdiA9IEFqdiggeyBhbGxFcnJvcnM6IHRydWUgfSApO1xuXG4gIHJldHVybiB7XG4gICAgdmFsaWRhdGU6IGZ1bmN0aW9uKCBhdHRyaWJ1dGVzLCBvcHRpb25zICkge1xuXG4gICAgICAvLyBEb24ndCB2YWxpZGF0ZSBzYWZlZ3VhcmRlZCBrZXlzLCBpZiBhbnkhXG4gICAgICBsZXQgYXR0cnM7XG4gICAgICBpZiAoIHRoaXMuc2FmZWd1YXJkICkge1xuICAgICAgICBhdHRycyA9IG9taXQoIGF0dHJpYnV0ZXMsIHRoaXMuc2FmZWd1YXJkICk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhdHRycyA9IGF0dHJpYnV0ZXM7XG4gICAgICB9XG5cbiAgICAgIC8vIEludmVzdGlnYXRlIGZpbHRlcmluZyBzYWZlZ3VhcmRlZCBrZXlzLlxuICAgICAgY29uc3QgdmFsaWQgPSBhanYudmFsaWRhdGUoIHNjaGVtYSwgYXR0cnMgKTtcbiAgICAgIGlmICggIXZhbGlkICkge1xuICAgICAgICByZXR1cm4gYWp2LmVycm9ycztcbiAgICAgIH1cbiAgICB9XG4gIH07XG59XG4iXX0=