'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (schema) {

  // Instantiate a new schema compiler per mixin. It will be closed over by
  // the validate function in the mixin.
  var ajv = (0, _ajv2.default)();

  return {
    validate: function validate(attributes, options) {

      // Don't validate safeguarded keys, if any!
      var attrs = undefined;
      if (this.safeguard) {
        attrs = (0, _underscore.omit)(attributes, this.safeguard);
      } else {
        attrs = attributes;
      }

      // Investigate filtering safeguarded keys.
      var valid = ajv.validate(schema, attrs);
      if (!valid) {
        return ajv.errors;
      }
    }
  };
};

var _ajv = require('ajv');

var _ajv2 = _interopRequireDefault(_ajv);

var _underscore = require('underscore');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbC92YWxpZGF0aW9uLW1peGluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztrQkF5QmUsVUFBVSxNQUFWLEVBQW1COzs7O0FBSWhDLE1BQU0sTUFBTSxvQkFBTixDQUowQjs7QUFNaEMsU0FBTztBQUNMLGNBQVUsa0JBQVUsVUFBVixFQUFzQixPQUF0QixFQUFnQzs7O0FBR3hDLFVBQUksaUJBQUosQ0FId0M7QUFJeEMsVUFBSyxLQUFLLFNBQUwsRUFBaUI7QUFDcEIsZ0JBQVEsc0JBQU0sVUFBTixFQUFrQixLQUFLLFNBQUwsQ0FBMUIsQ0FEb0I7T0FBdEIsTUFFTztBQUNMLGdCQUFRLFVBQVIsQ0FESztPQUZQOzs7QUFKd0MsVUFXbEMsUUFBUSxJQUFJLFFBQUosQ0FBYyxNQUFkLEVBQXNCLEtBQXRCLENBQVIsQ0FYa0M7QUFZeEMsVUFBSyxDQUFDLEtBQUQsRUFBUztBQUNaLGVBQU8sSUFBSSxNQUFKLENBREs7T0FBZDtLQVpRO0dBRFosQ0FOZ0M7Q0FBbkIiLCJmaWxlIjoidmFsaWRhdGlvbi1taXhpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGJ0Yy1hcHAtc2VydmVyIC0tIFNlcnZlciBmb3IgdGhlIEJpY3ljbGUgVG91cmluZyBDb21wYW5pb25cbiAqIENvcHlyaWdodCDCqSAyMDE2IEFkdmVudHVyZSBDeWNsaW5nIEFzc29jaWF0aW9uXG4gKlxuICogVGhpcyBmaWxlIGlzIHBhcnQgb2YgYnRjLWFwcC1zZXJ2ZXIuXG4gKlxuICogYnRjLWFwcC1zZXJ2ZXIgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBBZmZlcm8gR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqIFxuICogYnRjLWFwcC1zZXJ2ZXIgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBBZmZlcm8gR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqIFxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgQWZmZXJvIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIEZvb2Jhci4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqL1xuXG5pbXBvcnQgQWp2IGZyb20gJ2Fqdic7XG5pbXBvcnQgeyBvbWl0IH0gZnJvbSAndW5kZXJzY29yZSc7XG5cbi8vICMgVmFsaWRhdGlvbiBNaXhpbiBGYWN0b3J5XG4vLyBBIGZ1bmN0aW9uIHRvIGdlbmVyYXRlIGEgbWl4aW4gdGhhdCBtYXkgYmUgYXBwbGllZCB0byBhIEJhY2tib25lIE1vZGVsLlxuLy8gVG8gZ2VuZXJhdGUgdGhlIG1peGluLCB5b3UgbXVzdCBzdXBwbHkgYSBjb25mb3JtYW50IEpTT04gc2NoZW1hIGFzIEpTT04uXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiggc2NoZW1hICkge1xuXG4gIC8vIEluc3RhbnRpYXRlIGEgbmV3IHNjaGVtYSBjb21waWxlciBwZXIgbWl4aW4uIEl0IHdpbGwgYmUgY2xvc2VkIG92ZXIgYnlcbiAgLy8gdGhlIHZhbGlkYXRlIGZ1bmN0aW9uIGluIHRoZSBtaXhpbi5cbiAgY29uc3QgYWp2ID0gQWp2KCk7XG5cbiAgcmV0dXJuIHtcbiAgICB2YWxpZGF0ZTogZnVuY3Rpb24oIGF0dHJpYnV0ZXMsIG9wdGlvbnMgKSB7XG5cbiAgICAgIC8vIERvbid0IHZhbGlkYXRlIHNhZmVndWFyZGVkIGtleXMsIGlmIGFueSFcbiAgICAgIGxldCBhdHRycztcbiAgICAgIGlmICggdGhpcy5zYWZlZ3VhcmQgKSB7XG4gICAgICAgIGF0dHJzID0gb21pdCggYXR0cmlidXRlcywgdGhpcy5zYWZlZ3VhcmQgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGF0dHJzID0gYXR0cmlidXRlcztcbiAgICAgIH1cblxuICAgICAgLy8gSW52ZXN0aWdhdGUgZmlsdGVyaW5nIHNhZmVndWFyZGVkIGtleXMuXG4gICAgICBjb25zdCB2YWxpZCA9IGFqdi52YWxpZGF0ZSggc2NoZW1hLCBhdHRycyApO1xuICAgICAgaWYgKCAhdmFsaWQgKSB7XG4gICAgICAgIHJldHVybiBhanYuZXJyb3JzO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbn1cbiJdfQ==